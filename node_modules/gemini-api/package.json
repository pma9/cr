{
  "_args": [
    [
      {
        "raw": "gemini-api",
        "scope": null,
        "escapedName": "gemini-api",
        "name": "gemini-api",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/jeff/crypto/OrderHandling"
    ]
  ],
  "_from": "gemini-api@latest",
  "_id": "gemini-api@2.0.2",
  "_inCache": true,
  "_location": "/gemini-api",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/gemini-api-2.0.2.tgz_1491965720520_0.593577676685527"
  },
  "_npmUser": {
    "name": "mjesuele",
    "email": "matt@makeapps.io"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gemini-api",
    "scope": null,
    "escapedName": "gemini-api",
    "name": "gemini-api",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/gemini-api/-/gemini-api-2.0.2.tgz",
  "_shasum": "4de3041f17398b55371a8badcef26b6fbe41b0a6",
  "_shrinkwrap": null,
  "_spec": "gemini-api",
  "_where": "/home/jeff/crypto/OrderHandling",
  "author": {
    "name": "Matthew Jesuele",
    "email": "matt@makeapps.io"
  },
  "bugs": {
    "url": "https://github.com/mjesuele/gemini-api-node/issues"
  },
  "dependencies": {
    "axios": "^0.16.0",
    "lodash": "^4.17.4",
    "qs": "^6.4.0",
    "shortid": "^2.2.8",
    "ws": "^2.2.3"
  },
  "description": "Node.js client for the Gemini cryptocurrency exchange API.",
  "devDependencies": {
    "ava": "^0.19.1",
    "babel-cli": "^6.24.1",
    "babel-eslint": "^7.2.1",
    "babel-preset-env": "^1.1.8",
    "babel-preset-flow": "^6.23.0",
    "babel-preset-stage-2": "^6.24.1",
    "eslint": "^3.11.0",
    "eslint-config-airbnb-base": "^10.0.1",
    "eslint-config-makeapps": "latest",
    "eslint-plugin-better": "^0.1.5",
    "eslint-plugin-fp": "^2.2.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-lodash-fp": "^2.1.3",
    "flow-bin": "^0.43.1",
    "nodemon": "^1.11.0",
    "pipe-peek": "^1.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "4de3041f17398b55371a8badcef26b6fbe41b0a6",
    "tarball": "https://registry.npmjs.org/gemini-api/-/gemini-api-2.0.2.tgz"
  },
  "gitHead": "c7cb794ee007761cc6c9409bd1c56b3174dd20d8",
  "homepage": "https://github.com/mjesuele/gemini-api-node#readme",
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "mjesuele",
      "email": "matt@makeapps.io"
    }
  ],
  "name": "gemini-api",
  "optionalDependencies": {},
  "readme": "# gemini-api\n\nGemini cryptocurrency exchange API wrapper for Node.js\n\n## Installation\n\n```\nyarn add gemini-api\n```\n\n## Usage\n\nClients for both the [REST API](https://docs.gemini.com/rest-api/) and\n[streaming WebSocket API](https://docs.gemini.com/websocket-api/) are included.\nPrivate endpoints as indicated in the API docs require authentication with an API\nkey and secret key.\n\n### Example usage:\n\n```javascript\nimport GeminiAPI from 'gemini-api';\n\nconst restClient = new GeminiAPI({ key, secret, sandbox: false });\nconst websocketClient =\n  new GeminiAPI.WebsocketClient({ key, secret, sandbox: false });\n\nrestClient.getOrderBook('btcusd', { limit_asks: 10, limit_bids: 10 })\n  .then(console.log)\n  .catch(console.error);\n\nwebsocketClient.openMarketSocket('btcusd', () => {\n  websocketClient.addMarketMessageListener(data =>\n    doSomethingCool(data)\n  );\n});\n\n// The methods are bound properly, so feel free to destructure them:\nconst { getTicker } = restClient;\ngetTicker('btcusd')\n  .then(data =>\n    console.log(`Last trade: $${data.last} / BTC`)\n  )\n```\n\n## API\n\n### REST\nAll methods return promises.\n* getAllSymbols()\n* getTicker(symbol)\n* getOrderBook(symbol, params = {})\n* getTradeHistory(symbol, params = {})\n* getCurrentAuction(symbol)\n* getAuctionHistory(symbol, params = {})\n* newOrder(params = {})\n* cancelOrder({ order_id })\n* cancelAllSessionOrders()\n* cancelAllActiveOrders()\n* getMyOrderStatus({ order_id })\n* getMyActiveOrders()\n* getMyPastTrades(params = {})\n* getMyTradeVolume()\n* getMyAvailableBalances()\n\n### WebSocket\n* openMarketSocket(symbol, onOpen)\n* openOrderSocket(onOpen)\n* addMarketMessageListener(listener)\n* addOrderMessageListener(listener)\n* removeMarketMessageListener(listener)\n* removeOrderMessageListener(listener)\n* addMarketListener(event, listener)\n* addOrderListener(event, listener)\n* removeMarketListener(event, listener)\n* removeOrderListener(event, listener)\n\n## To Do\n* Improved documentation\n* More robust error handling\n\nFeedback and pull requests welcome!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/mjesuele/gemini-api-node.git"
  },
  "scripts": {
    "build": "babel src -d dist",
    "dev": "nodemon src/index.js --exec babel-node",
    "start": "node dist/index.js",
    "test": "ava"
  },
  "version": "2.0.2"
}
